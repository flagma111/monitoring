Процедура ЗагрузитьРезультатыМониторингаИзФайла(ИмяФайла) Экспорт 
	ТЗ_Мониторинг = ЗагрузитьCSV_to_ТЗ(ИмяФайла);
	ТекНомерМониторинга = "";
	ДокОбъект = Неопределено;
	Для Каждого СтрокаТЗ Из ТЗ_Мониторинг Цикл 
		Если НЕ ЗначениеЗаполнено(СтрокаТЗ.Номер) Тогда 
			Продолжить;
		КонецЕсли;
		Если НЕ ТекНомерМониторинга = СтрокаТЗ.Номер Тогда 
			Если НЕ ДокОбъект = Неопределено Тогда 
				Попытка
					ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
				КонецПопытки;
			КонецЕсли;
			ТекНомерМониторинга = СтрокаТЗ.Номер;
			НомерДокумента = СтрЗаменить(ТекНомерМониторинга,"#","");
			ДатаДокумента = Дата(СтрокаТЗ.Датамониторинга + " 00:00:00");
			ДокОбъект = Документы.ЗагрузкаРезультатовМониторинга.НайтиПоНомеру(НомерДокумента, ДатаДокумента);
			//Документы перезаписываем каждый раз
			Если ДокОбъект.Пустая() Тогда 
				ДокОбъект = Документы.ЗагрузкаРезультатовМониторинга.СоздатьДокумент();
				ДокОбъект.Дата = ДатаДокумента;
				ДокОбъект.Номер = НомерДокумента;
			Иначе 
				ДокОбъект = ДокОбъект.ПолучитьОбъект();
				ДокОбъект.РезультатыМониторинга.Очистить();
			КонецЕсли;
			ДокОбъект.ИсполнительМагазин = НайтиСоздатьСправочник("Магазины", СтрокаТЗ.Магазинисполнителя);
			Если ЗначениеЗаполнено(СтрокаТЗ.Времязавершения) Тогда 
				ДокОбъект.ВремяЗавершения = Дата(СтрокаТЗ.Времязавершения + ":00");
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаТЗ.Времяначала) Тогда 
				ДокОбъект.ВремяНачала = Дата(СтрокаТЗ.Времяначала + ":00");
			КонецЕсли;
			ДокОбъект.ИсполнительФизЛицо = НайтиСоздатьСправочник("ФизЛица", СтрокаТЗ.Исполнитель);
			ДокОбъект.Конкурент = НайтиСоздатьСправочник("Конкуренты", СтрокаТЗ.Магазинконкурента);
			ДокОбъект.ТипМониторинга = НайтиСоздатьСправочник("ТипМониторинга", СтрокаТЗ.Типмониторинга);  
			ДокОбъект.Посещен = СтрокаТЗ.Посещен = "Да";
		КонецЕсли;
		СтрокаТЧ = ДокОбъект.РезультатыМониторинга.Добавить();
		СтрокаТЧ.Акция 			= СтрокаТЗ.Акция = "Да";
		СтрокаТЧ.Пропущено 		= СтрокаТЗ.Пропущено = "Да";
		СтрокаТЧ.Отсутствует 	= СтрокаТЗ.Отсутствует = "Да";
		СтрокаТЧ.ИменаКартинок = СтрокаТЗ.Фото;
		СтрокаТЧ.Комментарий = СтрокаТЗ.Комментарий;
		СтрокаТЧ.Номенклатура = НайтиСоздатьСправочник("Номенклатура", СтрокаТЗ.Товар, Истина, СтрокаТЗ.Кодтовара);
		СтрокаТЧ.ЦенаКонкурента = СтрокаТЗ.Ценаконкур;
	КонецЦикла;
	
	Если НЕ ДокОбъект = Неопределено Тогда 
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;

КонецПроцедуры

Функция НайтиСоздатьСправочник(ИмяСправочника, ИмяЭлемента, ПоКоду = Ложь, Код = "")
	Если ПоКоду Тогда 
		Ссылка = Справочники[ИмяСправочника].НайтиПоКоду(Код);
		//Если Ссылка.Пустая() Тогда 
		//	Объект = Справочники[ИмяСправочника].СоздатьЭлемент();
		//	Объект.Наименование = ИмяЭлемента;
		//	Объект.Код = Код;
		//	Объект.Записать();
		//	Ссылка = Объект.Ссылка;
		//КонецЕсли;
	Иначе 
		Ссылка = Справочники[ИмяСправочника].НайтиПоНаименованию(ИмяЭлемента, Истина);
		Если (ИмяСправочника = "ФизЛица" ИЛИ ИмяСправочника = "ТипМониторинга") И Ссылка.Пустая() Тогда 
			Объект = Справочники[ИмяСправочника].СоздатьЭлемент();
			Объект.Наименование = ИмяЭлемента;
			Объект.Записать();
			Ссылка = Объект.Ссылка;
		КонецЕсли;
	КонецЕсли;
	Возврат Ссылка;
КонецФункции

Функция ЗагрузитьCSV_to_ТЗ(ИмяФайла) Экспорт 
	
	ЗагружаемыйФайл = Новый ТекстовыйДокумент;
	ЗагружаемыйФайл.Прочитать(ИмяФайла);
	Таблица = Новый ТаблицаЗначений;
	//шапка по умолчанию 1 строка, из первой строки делаем колонки таблицы
	Шапка = ЗагружаемыйФайл.ПолучитьСтроку(1);
	Разделитель = Константы.РазделительЗагрузки.Получить();
	Если НЕ ЗначениеЗаполнено(Разделитель) Тогда 
		Разделитель = ";";
	КонецЕсли;

	//раскладываем строку в массив
	МассивКолонок = РазложитьСтрокуВМассивПодстрок(Шапка,Разделитель); // процедура из типовой конфигурации, разбивает строку в массив по разделителям

	//генерируем колонки
	Для Каждого ИмяКолонки Из МассивКолонок Цикл
		
		ИмяБезПробелов = СтрЗаменить(ИмяКолонки," ",""); // убираем из имени колонок пробелы
		ИмяБезПробелов = СтрЗаменить(ИмяБезПробелов,"(","");
		ИмяБезПробелов = СтрЗаменить(ИмяБезПробелов,")","");
		ИмяБезПробелов = СтрЗаменить(ИмяБезПробелов,"№","");
		ИмяБезПробелов = СтрЗаменить(ИмяБезПробелов,"/","");
		ИмяБезПробелов = СтрЗаменить(ИмяБезПробелов,".","");

		Таблица.Колонки.Добавить(ИмяБезПробелов,,ИмяКолонки);
				
	КонецЦикла;
	
	// После того, как шапка сформирована можно приступать к обработке самих данных
	Для НомерСтроки=2 по ЗагружаемыйФайл.КоличествоСтрок() Цикл
		
		// получить строку файла с указанным номером и преобразуем её в массив
		Строка = ЗагружаемыйФайл.ПолучитьСтроку(НомерСтроки);
		МассивКолонок = РазложитьСтрокуВМассивПодстрок(Строка,Разделитель);// процедура из типовой конфигурации, разбивает строку в массив по разделителям
		
		Если МассивКолонок.Количество() > Таблица.Колонки.Количество() ИЛИ МассивКолонок.Количество()<3 Тогда
			Продолжить; // скорее всего в тексте содержит разделитель
		КонецЕсли;
		
		НоваяСтрока = Таблица.Добавить();
		
		Для НомерКолонки = 1 по МассивКолонок.Количество() Цикл
			//заполняем строку значениями
			ТекущееЗначение = МассивКолонок[НомерКолонки-1];
			ИмяКолонки = Таблица.Колонки[НомерКолонки-1].Имя;
			НоваяСтрока[ИмяКолонки] = ТекущееЗначение;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(Строка, Разделитель) Экспорт 
	
	Массивподстрок = Новый Массив;
	
	Строки = СтрЗаменить(Строка, Разделитель, Символы.ПС);
	
	Для н = 1 По СтрЧислоСтрок(Строки) Цикл 
		
		Массивподстрок.Добавить(СтрПолучитьСтроку(Строки, н));
		
	КонецЦикла;
	
	Возврат Массивподстрок;

КонецФункции

Процедура ПолучитьФайлыСФТП() Экспорт 
	АдресСайта = Константы.АдресФТП.Получить();
	Порт = 21;
	Логин = Константы.ЛогинФТП.Получить();
	Пароль = Константы.ПарольФТП.Получить();
	ИмяКаталога = "";//"/data/1c";
	FTPСоединение = Новый FTPСоединение(АдресСайта,Порт,Логин,Пароль);
	FTPСоединение.УстановитьТекущийКаталог(ИмяКаталога);
	
	МассивПапок = FTPСоединение.НайтиФайлы("*");
	Если МассивПапок.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	ПутьККаталогуКартинок = Константы.ПутьККаталогуКартинок.Получить();
	ПутьККаталогуОбмена = ПутьККаталогуКартинок + "TMP\";
	МассивАрхивов = Новый Массив;
	МассивМониторингов = Новый Массив;
	Для Каждого Папка Из МассивПапок Цикл 
		Если НайтиФайлы(ПутьККаталогуОбмена+Папка.Имя).Количество() Тогда 
			Продолжить;
		КонецЕсли;
		СоздатьКаталог(ПутьККаталогуОбмена+Папка.Имя);
	    Файлы = FTPСоединение.НайтиФайлы("/"+Папка.Имя,"*");
		Для Каждого Файл из Файлы Цикл 
			FTPСоединение.Получить(Файл.ПолноеИмя,ПутьККаталогуОбмена+Папка.Имя + "/" + Файл.Имя); 
			Если Файл.Расширение = ".zip" Тогда 
				МассивАрхивов.Добавить(ПутьККаталогуОбмена+Папка.Имя + "/" + Файл.Имя);
			ИначеЕсли Файл.Расширение = ".csv" Тогда 
				МассивМониторингов.Добавить(ПутьККаталогуОбмена+Папка.Имя + "/" + Файл.Имя);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	FTPСоединение = Неопределено;
	
	Для Каждого Архив Из МассивАрхивов Цикл 
		РаспаковатьАрхив(Архив, ПутьККаталогуКартинок);
	КонецЦикла;
	
	Для Каждого Мониторинг Из МассивМониторингов Цикл 
		ЗагрузитьРезультатыМониторингаИзФайла(Мониторинг);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьФайлНаФТП(ВременныйФайл, ИмяФайла) Экспорт 
	АдресСайта = Константы.АдресФТП.Получить();
	Порт = 21;
	Логин = Константы.ЛогинФТП.Получить();
	Пароль = Константы.ПарольФТП.Получить();
	ИмяКаталога = "";
	FTPСоединение = Новый FTPСоединение(АдресСайта,Порт,Логин,Пароль);
	FTPСоединение.УстановитьТекущийКаталог(ИмяКаталога);
	FTPСоединение.Записать(ВременныйФайл, ИмяФайла);
	
	FTPСоединение = Неопределено;
	
КонецПроцедуры

Процедура РаспаковатьАрхив(ИмяАрхива, ПутьККаталогу) Экспорт 
	Попытка
		ФайлАрхива = Новый ЧтениеZIPФайла(ИмяАрхива); 
		ФайлАрхива.ИзвлечьВсе(ПутьККаталогу, РежимВосстановленияПутейФайловZIP.Восстанавливать); 
		ФайлАрхива.Закрыть();
	Исключение
		ЗаписьЖурналаРегистрации("ОбменДанными", УровеньЖурналаРегистрации.Ошибка, ,,"ошибка распаковки архива" + Символы.ПС + ИмяАрхива);
	КонецПопытки;
КонецПроцедуры

Процедура ПроверитьСоздатьПользователей() Экспорт 
	СписокПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого Пользователь Из СписокПользователей Цикл 
		ТекПользователь = Справочники.Пользователи.НайтиПоКоду(Пользователь);
		Если ТекПользователь.Пустая() Тогда 
			НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
			НовыйПользователь.Код = Пользователь;
			НовыйПользователь.Наименование = НовыйПользователь.Код;
			НовыйПользователь.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры