
&НаСервере
Процедура ЗаполнитьНаСервере()
	СпМагазинов = Новый СписокЗначений;
	
	Массив = Объект.Магазины.Выгрузить().ВыгрузитьКолонку("Магазин");
	СпМагазинов.ЗагрузитьЗначения(Массив);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Магазин.Город КАК Город,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			КатегорияНоменклатуры = &КатегорияНоменклатуры
	|				И Магазин В (&Магазин)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Магазин.Город
	|
	|УПОРЯДОЧИТЬ ПО
	|	Город,
	|	Номенклатура";
	Запрос.УстановитьПараметр("КатегорияНоменклатуры", Объект.Категория);
	Запрос.УстановитьПараметр("Магазин", СпМагазинов);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Номенклатура.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКатегории(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБазуРаспределенияНаСервере()
	СпНоменклатуры = Новый СписокЗначений;
	СпМагазинов = Новый СписокЗначений;
	
	Массив = Объект.Номенклатура.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	СпНоменклатуры.ЗагрузитьЗначения(Массив);
	
	Массив = Объект.Магазины.Выгрузить().ВыгрузитьКолонку("Магазин");
	СпМагазинов.ЗагрузитьЗначения(Массив);
	
	Запрос1 = Новый Запрос;
	Запрос1.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Таблица = Объект.Номенклатура.Выгрузить();
	Запрос1.УстановитьПараметр("ТЗИсточник", Таблица);
	Запрос1.Текст = 
	"ВЫБРАТЬ
	|	ТЗ2.Город КАК Город,
	|	ТЗ2.Номенклатура КАК Номенклатура1
	|ПОМЕСТИТЬ ТЗНоменклатура
	|ИЗ
	|	&ТЗИсточник КАК ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ТЗНоменклатура.Номенклатура1 КАК Номенклатура,
	|	ТЗНоменклатура.Город
	|ПОМЕСТИТЬ Ном
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗНоменклатура КАК ТЗНоменклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	|			ПО (Города.Ссылка = ТЗНоменклатура.Город)
	|		ПО Номенклатура.Ссылка = ТЗНоменклатура.Номенклатура1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонкурентыМагазины.Магазин.Город КАК Город,
	|	КонкурентыНоменклатура.Ссылка КАК Конкурент,
	|	КонкурентыМагазины.Магазин КАК Магазин,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ном.Ссылка) КАК ВремяМониторинг,
	|	КонкурентыМагазины.ВремяПешком / 60 КАК ВремяВПути,
	|	КонкурентыМагазины.Магазин.Трудоресурс КАК Трудоресурс,
	|	КонкурентыНоменклатура.Ссылка.Бренд КАК Брэнд,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ном.Ссылка) КАК SKU
	|ПОМЕСТИТЬ Промежуточная
	|ИЗ
	|	Справочник.Конкуренты.Номенклатура КАК КонкурентыНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Конкуренты.Магазины КАК КонкурентыМагазины
	|		ПО КонкурентыНоменклатура.Ссылка = КонкурентыМагазины.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ном КАК Ном
	|		ПО (КонкурентыНоменклатура.Номенклатура = Ном.Ссылка
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном.Ссылка.Родитель
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном.Ссылка.Родитель.Родитель
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном.Ссылка.Родитель.Родитель.Родитель
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном.Ссылка.Родитель.Родитель.Родитель.Родитель)
	|			И (КонкурентыМагазины.Магазин.Город = Ном.Город)
	|ГДЕ
	//	> Кириллов А.
	|	НЕ КонкурентыНоменклатура.Ссылка.ПометкаУдаления
	//	< Кириллов А.
	|	И КонкурентыМагазины.Магазин В(&СпМагазинов)
	|
	|СГРУППИРОВАТЬ ПО
	|	КонкурентыНоменклатура.Ссылка,
	|	КонкурентыМагазины.Магазин,
	|	КонкурентыМагазины.Магазин.Город,
	|	КонкурентыМагазины.ВремяПешком / 60,
	|	КонкурентыМагазины.Магазин.Трудоресурс,
	|	КонкурентыНоменклатура.Ссылка.Бренд
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Промежуточная.Город КАК Город,
	|	Промежуточная.Конкурент КАК Конкурент,
	|	Промежуточная.Магазин,
	|	Промежуточная.ВремяМониторинг * &ВремяМониторингаЕдиницы / 60 КАК ВремяМониторинг,
	|	Промежуточная.ВремяВПути,
	|	Промежуточная.ВремяВПути + Промежуточная.ВремяМониторинг * &ВремяМониторингаЕдиницы / 60 КАК Время,
	|	Промежуточная.Трудоресурс,
	|	Промежуточная.Брэнд КАК Брэнд,
	|	Промежуточная.SKU,
	|	Промежуточная.Конкурент.ТипКонкурента.Код КАК КонкурентТипКонкурентаКод
	|ИЗ
	|	Промежуточная КАК Промежуточная
	|
	|УПОРЯДОЧИТЬ ПО
	|	Город,
	|	Брэнд,
	|	КонкурентТипКонкурентаКод,
	|	Конкурент,
	|	Время";
	Запрос1.УстановитьПараметр("СпМагазинов", СпМагазинов);
	//Запрос.УстановитьПараметр("СпНоменклатуры", СпНоменклатуры);
	Запрос1.УстановитьПараметр("ТЗНоменклатура", Объект.Номенклатура);
	Запрос1.УстановитьПараметр("ВремяМониторингаЕдиницы", Константы.ВремяМониторингаЕдиницыТовара.Получить());
	ТЗ = Запрос1.Выполнить().Выгрузить();
	
	Объект.Распределение.Загрузить(ТЗ);
	    
	Объект.РаспределениеМагазины.Очистить();
	Для Каждого Стр Из Объект.Магазины Цикл
		НСтр = Объект.РаспределениеМагазины.Добавить();
		НСтр.Магазин = Стр.Магазин;
		НСтр.Ресурс = Стр.Магазин.Трудоресурс;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБазуРаспределения(Команда)
	ЗаполнитьБазуРаспределенияНаСервере();
	РаспределитьБазуНаСервере();
	ЗаполнитьРаскраскуТаблицы();
	
	РаспределитьЗадания();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРаскраскуТаблицы()
	
	Для Каждого Стр Из Объект.Распределение Цикл
		Если Стр.Брэнд.СетевоеЦенообразование Тогда
			//Ищем, сколько распределено по этому брэнду чистого времени мониторинга
			Отбор = Новый Структура();  
			Отбор.Вставить("Брэнд", Стр.Брэнд);
			Отбор.Вставить("Город", Стр.Город);
			Отбор = Объект.Распределение.НайтиСтроки(Отбор);
			ИтогоРаспределено = 0;
			ВремяМониторинг = 0;
			Для Каждого ОСтр Из Отбор Цикл
				ИтогоРаспределено = ИтогоРаспределено + ОСтр.Распределено;
				ВремяМониторинг = ОСтр.ВремяМониторинг;
			КонецЦикла;
			
			Стр.Раскрашивать = ИтогоРаспределено <> ВремяМониторинг;
		Иначе	
			//Ищем, сколько распределено по этому контрагенту чистого времени мониторинга
			Отбор = Новый Структура();  
			Отбор.Вставить("Конкурент", Стр.Конкурент);
			Отбор.Вставить("Город", Стр.Город);
			Отбор = Объект.Распределение.НайтиСтроки(Отбор);
			
			ИтогоРаспределено = 0;
			ВремяМониторинг = 0;
			Для Каждого ОСтр Из Отбор Цикл
				ИтогоРаспределено = ИтогоРаспределено + ОСтр.Распределено;
				ВремяМониторинг = ОСтр.ВремяМониторинг;
			КонецЦикла;
			
			Стр.Раскрашивать = ИтогоРаспределено <> ВремяМониторинг;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМагазиныНаСервере()
	
	СпГородов = Новый СписокЗначений;
	
	Массив = Объект.Города.Выгрузить().ВыгрузитьКолонку("Город");
	СпГородов.ЗагрузитьЗначения(Массив);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Магазины.Город КАК Город,
	|	Магазины.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	Магазины.Город В(&Города)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Город,
	|	Магазин";
	Запрос.УстановитьПараметр("Города", СпГородов);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Объект.Магазины.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМагазины(Команда)
	ЗаполнитьМагазиныНаСервере();
КонецПроцедуры

&НаСервере
Процедура РаспределитьБазуНаСервере()
	
	Для Каждого Стр Из Объект.Распределение Цикл
		Если Стр.Брэнд.СетевоеЦенообразование Тогда
			//Ищем, сколько распределено по этому брэнду чистого времени мониторинга
			Отбор = Новый Структура();  
			Отбор.Вставить("Брэнд", Стр.Брэнд);
			Отбор.Вставить("Город", Стр.Город);
			Отбор = Объект.Распределение.НайтиСтроки(Отбор);
			ИтогоРаспределено = 0;
			ВремяМониторинг = 0;
			Для Каждого ОСтр Из Отбор Цикл
				ИтогоРаспределено = ИтогоРаспределено + ОСтр.Распределено;
				ВремяМониторинг = ОСтр.ВремяМониторинг;
			КонецЦикла;
			
			Если Не ИтогоРаспределено = ВремяМониторинг Тогда
				//Ищем магазин в общей таблице ресурсов магазинов
				ОтборМ = Новый Структура();  
				ОтборМ.Вставить("Магазин", Стр.Магазин);
				ОтборМ = Объект.РаспределениеМагазины.НайтиСтроки(ОтборМ);
				Для Каждого СтрМ Из ОтборМ Цикл
					//У магазина есть нераспределенный ресурс
					Если СтрМ.Ресурс > СтрМ.Распределено Тогда
						НРес = СтрМ.Ресурс - СтрМ.Распределено;
						//Проверим, что ресурс не будет потрачен только на дорогу
						Если НРес > Стр.ВремяВПути Тогда
							Стр.Распределено = ?((ВремяМониторинг - ИтогоРаспределено + Стр.ВремяВПути) < НРес, (ВремяМониторинг - ИтогоРаспределено), НРес - Стр.ВремяВПути);
							СтрМ.Распределено = ?((ВремяМониторинг - ИтогоРаспределено + Стр.ВремяВПути) < НРес, СтрМ.Распределено + (ВремяМониторинг - ИтогоРаспределено + Стр.ВремяВПути), СтрМ.Распределено + НРес);
						КонецЕсли;	
					КонецЕсли;	
				КонецЦикла;		
			КонецЕсли;
		Иначе	
			//Ищем, сколько распределено по этому контрагенту чистого времени мониторинга
			Отбор = Новый Структура();  
			Отбор.Вставить("Конкурент", Стр.Конкурент);
			Отбор.Вставить("Город", Стр.Город);
			Отбор = Объект.Распределение.НайтиСтроки(Отбор);
			
			ИтогоРаспределено = 0;
			ВремяМониторинг = 0;
			Для Каждого ОСтр Из Отбор Цикл
				ИтогоРаспределено = ИтогоРаспределено + ОСтр.Распределено;
				ВремяМониторинг = ОСтр.ВремяМониторинг;
			КонецЦикла;
			
			Если ИтогоРаспределено = 0 Тогда
				//Ищем магазин в общей таблице ресурсов магазинов
				ОтборМ = Новый Структура();  
				ОтборМ.Вставить("Магазин", Стр.Магазин);
				ОтборМ = Объект.РаспределениеМагазины.НайтиСтроки(ОтборМ);
								
				Для Каждого СтрМ Из ОтборМ Цикл
					//У магазина есть нераспределенный ресурс
					Если СтрМ.Ресурс > СтрМ.Распределено Тогда
						НРес = СтрМ.Ресурс - СтрМ.Распределено;
						//Проверим, что ресурс не будет потрачен только на дорогу
						Если НРес >= Стр.Время Тогда
							Стр.Распределено = Стр.ВремяМониторинг;
							СтрМ.Распределено = СтрМ.Распределено + Стр.Время;
						КонецЕсли;	
					КонецЕсли;	
				КонецЦикла;		
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура НераспределенныеПриИзменении(Элемент)
	
	Если Нераспределенные = Истина Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Раскрашивать", Истина);
		Элементы.Распределение.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	Иначе
		Элементы.Распределение.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьЗадания()
	
	//Создаем список конкурентов и номенклатуры для распределения
	СпНоменклатуры = Новый СписокЗначений;
	СпКонкурентов = Новый СписокЗначений;

	Массив = Объект.Номенклатура.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	СпНоменклатуры.ЗагрузитьЗначения(Массив);	
	
	Массив = Объект.Распределение.Выгрузить().ВыгрузитьКолонку("Конкурент");
	СпКонкурентов.ЗагрузитьЗначения(Массив);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Таблица = Объект.Номенклатура.Выгрузить();
	Запрос.УстановитьПараметр("ТЗИсточник", Таблица);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ2.Город КАК Город,
	|	ТЗ2.Номенклатура КАК Номенклатура1
	|ПОМЕСТИТЬ ТЗНоменклатура
	|ИЗ
	|	&ТЗИсточник КАК ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Города.Ссылка КАК Город
	|ПОМЕСТИТЬ Ном1
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗНоменклатура КАК ТЗНоменклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	|			ПО (Города.Ссылка = ТЗНоменклатура.Город)
	|		ПО Номенклатура.Ссылка = ТЗНоменклатура.Номенклатура1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонкурентыНоменклатура.Ссылка КАК Конкурент,
	|	Ном1.Номенклатура КАК Номенклатура,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ном1.Номенклатура) КАК ВремяМониторинг
	|ПОМЕСТИТЬ Промежуточная
	|ИЗ
	|	Справочник.Конкуренты.Номенклатура КАК КонкурентыНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Ном1 КАК Ном1
	|		ПО (КонкурентыНоменклатура.Номенклатура = Ном1.Номенклатура
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном1.Номенклатура.Родитель
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном1.Номенклатура.Родитель.Родитель
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном1.Номенклатура.Родитель.Родитель.Родитель
	|				ИЛИ КонкурентыНоменклатура.Номенклатура = Ном1.Номенклатура.Родитель.Родитель.Родитель.Родитель)
	|			И КонкурентыНоменклатура.Ссылка.Город = Ном1.Город
	|ГДЕ
	//	> Кириллов А.
	|	НЕ КонкурентыНоменклатура.Ссылка.ПометкаУдаления
	//	< Кириллов А.
	|	И КонкурентыНоменклатура.Ссылка В(&СпКонкурентов)
	|
	|СГРУППИРОВАТЬ ПО
	|	КонкурентыНоменклатура.Ссылка,
	|	Ном1.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Промежуточная.Конкурент КАК Конкурент,
	|	Промежуточная.Номенклатура
	|ИЗ
	|	Промежуточная КАК Промежуточная
	|
	|СГРУППИРОВАТЬ ПО
	|	Промежуточная.Номенклатура,
	|	Промежуточная.Конкурент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Конкурент";
	Запрос.УстановитьПараметр("СпКонкурентов", СпКонкурентов);
	Запрос.УстановитьПараметр("СпНоменклатуры", СпНоменклатуры);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Объект.РаспределениеЗаданий.Загрузить(ТЗ);

	//Распределяем номенклатуру 
	Для Каждого Стр Из Объект.Распределение Цикл
		Если Стр.Распределено > 0 Тогда
			КС = Окр(Стр.Распределено / Стр.ВремяМониторинг, 2, РежимОкругления.Окр15как20);
			Отбор = Новый Структура();
			Отбор.Вставить("Конкурент", Стр.Конкурент);
			Отбор.Вставить("Магазин", Справочники.Магазины.ПустаяСсылка());
			НайденныеСтроки = Объект.РаспределениеЗаданий.НайтиСтроки(Отбор);
			Сч = 0;
			Для Каждого НСтр Из НайденныеСтроки Цикл
				Сч = Сч + 1;
				Если Сч <= Окр(КС * Стр.SKU, 0, РежимОкругления.Окр15как20) Тогда
					НСтр.Магазин = Стр.Магазин;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Функция ПроверкаЗаполненности()
	
	ТекстОшибки = "";
	
	Отбор = Новый Структура();
	Отбор.Вставить("Раскрашивать", Истина);
	НайденныеСтроки = Объект.Распределение.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ТекстОшибки = "Распределение не полное
		|Продолжение невозможно!";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) ИЛИ Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ТекстОшибки = "Не заполнены даты мониторинга
		|Продолжение невозможно!";
	КонецЕсли;
	
	Возврат ТекстОшибки;
	
КонецФункции

&НаКлиенте
Процедура СоздатьЗадание(Команда)
	
	ТекстОшибки = ПроверкаЗаполненности();
	Если Не ТекстОшибки = "" Тогда
		ПоказатьПредупреждение(,ТекстОшибки);
	Иначе	
		ДокЗадание = СформироватьЗаданияНаМониторинг();
		
		П = Новый Структура("Ключ", ДокЗадание);
		Форма = ПолучитьФорму("Документ.ЗаданиеНаМониторинг.Форма.ФормаДокумента", П);
		Форма.Открыть();
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьЗаданияНаМониторинг()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Таблица = Объект.РаспределениеЗаданий.Выгрузить();
	Запрос.УстановитьПараметр("ТЗИсточник", Таблица);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ2.Конкурент КАК ТЗКонкурент,
	|	ТЗ2.Номенклатура КАК ТЗНоменклатура,
	|	ТЗ2.Магазин КАК ТЗМагазин
	|ПОМЕСТИТЬ ТЗ
	|ИЗ
	|	&ТЗИсточник КАК ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Конкуренты_.Ссылка КАК Конкурент,
	|	Магазины_.Ссылка КАК Магазин,
	|	Номенклатура_.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ ТЗРаспределение
	|ИЗ
	|	ТЗ КАК ТЗ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины_
	|		ПО ТЗ.ТЗМагазин = Магазины_.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Конкуренты КАК Конкуренты_
	|		ПО ТЗ.ТЗКонкурент = Конкуренты_.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура_
	|		ПО ТЗ.ТЗНоменклатура = Номенклатура_.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Магазин,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЦеныНоменклатурыСрезПоследних.КатегорияНоменклатуры
	|ПОМЕСТИТЬ ЦеныКатегории
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗРаспределение.Номенклатура,
	|	ТЗРаспределение.Магазин,
	|	ТЗРаспределение.Конкурент,
	|	ЦеныКатегории.КатегорияНоменклатуры КАК Категория,
	|	ЦеныКатегории.Цена
	|ИЗ
	|	ТЗРаспределение КАК ТЗРаспределение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныКатегории КАК ЦеныКатегории
	|		ПО ТЗРаспределение.Магазин = ЦеныКатегории.Магазин
	|			И ТЗРаспределение.Номенклатура = ЦеныКатегории.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТЗРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЦеныКатегории";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	ДокЗадание = Документы.ЗаданиеНаМониторинг.СоздатьДокумент();
	ДокЗадание.Дата				= ТекущаяДата();
	ДокЗадание.ДатаНачала		= Объект.ДатаНачала;
	ДокЗадание.ДатаОкончания	= Объект.ДатаОкончания;
	ДокЗадание.Товары.Загрузить(ТЗ);
	ДокЗадание.Записать();
	Возврат ДокЗадание.Ссылка;
	
КонецФункции	

&НаСервере
Процедура ВсеГородаНаСервере()
	
	ЗапросГорода = Новый Запрос;
	ЗапросГорода.Текст =
	"ВЫБРАТЬ
	|	Города.Ссылка КАК Город
	|ИЗ
	|	Справочник.Города КАК Города
	|ГДЕ
	|	НЕ Города.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	Города.Наименование";
	ТЗГорода = ЗапросГорода.Выполнить().Выгрузить();
	Объект.Города.Загрузить(ТЗГорода);
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеГорода(Команда)
	ВсеГородаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьРегионНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРегион(Команда)
	
	ОткрытьФорму("Справочник.Города.ФормаВыбораГруппы",, ЭтотОбъект,,,, Новый ОписаниеОповещения("ВыборЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ВыборЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    
    Если РезультатЗакрытия = Неопределено Тогда
        
        Сообщить("Ничего не выбрано.");
        
    Иначе
		
		ЗапросГорода = Новый Запрос;
		ЗапросГорода.Текст =
		"ВЫБРАТЬ
		|	Города.Ссылка КАК Город
		|ИЗ
		|	Справочник.Города КАК Города
		|ГДЕ
		|	НЕ Города.ЭтоГруппа
		|	И Города.Родитель = &Родитель
		|
		|УПОРЯДОЧИТЬ ПО
		|	Города.Наименование";
		ЗапросГорода.УстановитьПараметр("Родитель", РезультатЗакрытия.Ссылка);
		Результат = ЗапросГорода.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Стр = Объект.Города.Добавить();
			Стр.Город = Результат.Город;			
		КонецЦикла;
		ТЗ = Объект.Города.Выгрузить();
		ТЗ.Свернуть("Город");
		ТЗ.Сортировать("Город Возр");
		Объект.Города.Загрузить(ТЗ);
        
    КонецЕсли;
    
КонецПроцедуры	

&НаСервере
Процедура ОчиститьГородаНаСервере()
	Объект.Города.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьГорода(Команда)
	ОчиститьГородаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура мПрочитатьТабличныйДокументИзExcel(ИмяФайла, НомерЛистаExcel = 1) Экспорт
	
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(ИмяФайла);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		Сообщить("Обработка файла Microsoft Excel...");
		ExcelЛист = Excel.Sheets(НомерЛистаExcel);
	Исключение
		Сообщить("Ошибка загрузки из Excel");
		Возврат;
		
	КонецПопытки;
	
	Объект.Номенклатура.Очистить();
	
	ВсегоСтрок = ExcelЛист.Cells.SpecialCells(xlLastCell).Row;
	
	Для Row = 1 По ВсегоСтрок Цикл
		
		КодНоменклатура	= СокрЛП(ExcelЛист.Cells(Row,1).Text);
		ДобавитьСтроку(КодНоменклатура); 
		
	КонецЦикла;
	
	Excel.WorkBooks.Close();
	Excel = 0;

	ВыполнитьСортировку();

КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(КодНоменклатура)
	
	Для Каждого СтрГорода Из Объект.Города Цикл
		Стр = Объект.Номенклатура.Добавить();
		Стр.Город = СтрГорода.Город;
		Стр.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(КодНоменклатура);
	КонецЦикла;
		
КонецПроцедуры	

&НаСервере
Процедура ВыполнитьСортировку()
	
	ТЗ = Объект.Номенклатура.Выгрузить();
	ТЗ.Сортировать("Город Возр, Номенклатура Возр");
	Объект.Номенклатура.Загрузить(ТЗ);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Заголовок = "Прочитать табличный документ из файла";
	ДиалогВыбораФайла.Фильтр    = "Лист Excel (*.xls)";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ФайлНаДиске = Новый Файл(ДиалогВыбораФайла.ПолноеИмяФайла);
		мПрочитатьТабличныйДокументИзExcel(ДиалогВыбораФайла.ПолноеИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Закрыть();
КонецПроцедуры
