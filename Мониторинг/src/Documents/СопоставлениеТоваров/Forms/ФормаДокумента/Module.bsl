&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТЧ_В_ДеревоНаСервере();

	ОО = РеквизитФормыВЗначение("Объект"); 	СКД = ОО.ПолучитьМакет("Макет");
	URLСКД = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор());
	Отбор.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСКД));
	НастройкиПоУмолчанию = СКД.НастройкиПоУмолчанию;
	Отбор.ЗагрузитьНастройки(НастройкиПоУмолчанию);
	СохраненныеНастройки = ОО.ОтборХранилище.Получить();
	Если НЕ СохраненныеНастройки = Неопределено Тогда 
		Отбор.ЗагрузитьНастройки(СохраненныеНастройки);
	КонецЕсли;
	
	ПутьККаталогуКартинок = Константы.ПутьККаталогуКартинок.Получить();
	КаталогФото = Константы.КаталогФото.Получить();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда 
		Объект.Ответственный = ОбщегоНазначения.ТекущийПользователь();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ДеревоВ_ТЧ(ТекущийОбъект);
	ХранилищеНастроекОтбора = Новый ХранилищеЗначения(Отбор.ПолучитьНастройки());
	Объект.ОтборХранилище = ХранилищеНастроекОтбора;
КонецПроцедуры

&НаСервере
Процедура ТЧ_В_ДеревоНаСервере()
	ДеревоСопоставленияЭлементы = ДеревоСопоставления.ПолучитьЭлементы();
	ДеревоСопоставленияЭлементы.Очистить(); //Ден  2017 12 01 ---
	Если НЕ Объект.Сопоставление.Количество() Тогда 
		Возврат;
	КонецЕсли;
	ТекТовар = Неопределено;
	Для Каждого строкаТЧ Из Объект.Сопоставление Цикл 
		Если НЕ текТовар = строкаТЧ.Номенклатура Тогда 
			текТовар = строкаТЧ.Номенклатура;
			СтрУр1 = ДеревоСопоставленияЭлементы.Добавить();
			СтрУр1.Уровень = 1;
			СтрУр1.НоменклатураКонкурент = текТовар;
			СтрУр1.КодИсполнитель = текТовар.Код;
			СтрокаЦена = Объект.ДанныеНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура", текТовар));
			Если СтрокаЦена.Количество() Тогда 
				СтрУр1.Цена = СтрокаЦена[0].ЦенаНоменклатуры;
				СтрУр1.КатегорияКомментарий = СтрокаЦена[0].КатегорияЦены;
			КонецЕсли;
		КонецЕсли;
		СтрУр2 = СтрУр1.ПолучитьЭлементы().Добавить();
		СтрУр2.НоменклатураКонкурент = строкаТЧ.Конкурент;
		СтрУр2.КодИсполнитель = строкаТЧ.Исполнитель;
		СтрУр2.СопоставлениеКорректно = строкаТЧ.СопоставлениеКорректно;
		СтрУр2.Цена = строкаТЧ.ЦенаКонкурента;
		СтрУр2.НомерСтрокиТЧ = строкаТЧ.НомерСтроки;
		СтрУр2.КатегорияКомментарий = строкаТЧ.Комментарий;
		СтрУр2.ИменаКартинок =строкаТЧ.ИменаКартинок;
		СтрУр2.Уровень = 2;
		СтрУр2.ДатаМониторинга = строкаТЧ.ДатаМониторинга;
		СтрУр2.ТипМониторинга = строкаТЧ.ТипМониторинга;
		СтрУр2.КомментарийКНоменклатуре = строкаТЧ.КомментарийКНоменклатуре;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДеревоВ_ТЧ(ТекущийОбъект)
	Объект.Сопоставление.Очистить();//Ден  2017 12 04 ---
	СтрокиПервогоУровня = ДеревоСопоставления.ПолучитьЭлементы();
	Для Каждого СтрУр1 Из СтрокиПервогоУровня Цикл 
		Номенклатура = СтрУр1.НоменклатураКонкурент;
		Для Каждого СтрУр2 Из СтрУр1.ПолучитьЭлементы() Цикл
			СтрокаТЧ = ТекущийОбъект.Сопоставление.Добавить();
			СтрокаТЧ.Номенклатура = Номенклатура;
			СтрокаТЧ.Конкурент = СтрУр2.НоменклатураКонкурент;
			СтрокаТЧ.Исполнитель = СтрУр2.КодИсполнитель;
			СтрокаТЧ.ЦенаКонкурента = СтрУр2.Цена;
			СтрокаТЧ.ДатаМониторинга = СтрУр2.ДатаМониторинга;
			СтрокаТЧ.ТипМониторинга = СтрУр2.ТипМониторинга;
			СтрокаТЧ.СопоставлениеКорректно = СтрУр2.СопоставлениеКорректно;
			СтрокаТЧ.Комментарий = СтрУр2.КатегорияКомментарий;
			СтрокаТЧ.ИменаКартинок = СтрУр2.ИменаКартинок;
			СтрокаТЧ.КомментарийКНоменклатуре = СтрУр2.КомментарийКНоменклатуре;
		КонецЦикла;
	КонецЦикла;
	ТекущийОбъект.Сопоставление.Сортировать("Номенклатура Возр");
КонецПроцедуры

&НаСервере
Процедура ПолучитьТЗЦЕН(МассивНоменклатуры)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
		|	СУММА(1) КАК КоличествоПовторений
		|ПОМЕСТИТЬ ВТ_Категории
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура В (&МассивНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.КатегорияНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Категории.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ВТ_Категории.КоличествоПовторений) КАК КоличествоПовторений
		|ПОМЕСТИТЬ ВТ_МаксимальныеКатегории
		|ИЗ
		|	ВТ_Категории КАК ВТ_Категории
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Категории.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Категории.Номенклатура КАК Номенклатура,
		|	МИНИМУМ(ВТ_Категории.КатегорияНоменклатуры) КАК КатегорияНоменклатуры
		|ПОМЕСТИТЬ ВТ_НомКатегории
		|ИЗ
		|	ВТ_Категории КАК ВТ_Категории
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МаксимальныеКатегории КАК ВТ_МаксимальныеКатегории
		|		ПО ВТ_Категории.Номенклатура = ВТ_МаксимальныеКатегории.Номенклатура
		|			И ВТ_Категории.КоличествоПовторений = ВТ_МаксимальныеКатегории.КоличествоПовторений
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Категории.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СРЕДНЕЕ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_СредняяЦена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура В (&МассивНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СредняяЦена.Номенклатура КАК Номенклатура,
		|	ВТ_СредняяЦена.Цена КАК ЦенаНоменклатуры,
		|	ВТ_НомКатегории.КатегорияНоменклатуры КАК КатегорияНоменклатуры
		|ИЗ
		|	ВТ_СредняяЦена КАК ВТ_СредняяЦена
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НомКатегории КАК ВТ_НомКатегории
		|		ПО ВТ_СредняяЦена.Номенклатура = ВТ_НомКатегории.Номенклатура";
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	//Ден  2017 12 01 ---
	Объект.ДанныеНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());
	//---
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСопоставленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)		
	Если Поле.Имя = "ДеревоСопоставленияКомментарий" Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь; 
	
	Если Поле.Имя = "ДеревоСопоставленияСопоставлениеКорректно" Тогда 
		Флажок("");
	Иначе
		ТекСтрока = Элементы.ДеревоСопоставления.ТекущиеДанные;
		ПоказатьЗначение(Неопределено,ТекСтрока[стрзаменить(Поле.Имя, "ДеревоСопоставления","")]);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСопоставленияПриАктивизацииСтроки(Элемент)
	Фото1 = "";
	Фото2 = "";
	Фото3 = "";
	Фото4 = "";

	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекущиеДанные.Уровень = 1 Тогда
		ТекущаяНоменклатура = ТекущиеДанные.НоменклатураКонкурент;
	Иначе
		ТекущаяНоменклатура = ТекущиеДанные.ПолучитьРодителя().НоменклатураКонкурент;
	КонецЕсли;

	//Картинка из карточки номенклатуры	Ден  2017 12 04 ---
	СтрокаКартинка = ПолучитьСсылкуНаФотоНоменклатуры(ТекущаяНоменклатура, КаталогФото);
	Если ЗначениеЗаполнено(СтрокаКартинка) Тогда
		Фото1 = "<html>
			|<body> <div align = center>
			|<img height = 100% src='" + СтрокаКартинка + "'/></div>
			|</body>
			|</html>";
	Иначе
		Фото1 = "";
	КонецЕсли;

	//Картинки из результатов мониторинга Ден  2017 12 04 ---
	МассивАдресовФото = СтрРазделить(ТекущиеДанные.ИменаКартинок, ",");
	НомерФото = 2;
	Для Каждого АдресФото из МассивАдресовФото Цикл
		Если СтрНайти(АдресФото, "http://") = 0 Тогда
			АдресФото = ПутьККаталогуКартинок + АдресФото;
		КонецЕсли;
		СсылкаНаФото = "<html>
			|<body> <div align = center>
			|<img height = 100% src='" + АдресФото + "'/></div>
			|</body>
			|</html>";
		ЭтотОбъект["Фото" + НомерФото] = СсылкаНаФото;
		НомерФото = НомерФото + 1;
		Если НомерФото > 4 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//---
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаФотоНоменклатуры(Номенклатура, КаталогФото)
	Фото = КаталогФото + Номенклатура.Фотография + ".jpg";
	Возврат Фото;
КонецФункции

&НаКлиенте
Процедура Фото1ПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ОткрытьФото(Фото1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Фото2ПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ОткрытьФото(Фото2);
КонецПроцедуры

&НаКлиенте
Процедура Фото3ПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ОткрытьФото(Фото3);
КонецПроцедуры

&НаКлиенте
Процедура Фото4ПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	ОткрытьФото(Фото4);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФото(СсылкаНаФото, ЭтоФотоСобственнойНоменклатуры = Ложь)
	ТекущиеДанные = Элементы.ДеревоСопоставления.ТекущиеДанные;
	СтрокаКонкурент = "";
	Описание = ПолучитьОписаниеНоменклатуры(ТекущаяНоменклатура);

	Если НЕ ЭтоФотоСобственнойНоменклатуры И НЕ ТекущиеДанные = Неопределено Тогда 
		Если ТипЗнч(ТекущиеДанные.НоменклатураКонкурент) = Тип("СправочникСсылка.Конкуренты") Тогда 
			СтрокаКонкурент = СокрЛП(ТекущиеДанные.НоменклатураКонкурент);
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущиеДанные.КомментарийКНоменклатуре) Тогда 
			СтрокаКонкурент = СтрокаКонкурент + Символы.ПС + ТекущиеДанные.КомментарийКНоменклатуре;
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Описание) Тогда 
		СтрокаКонкурент = Описание + Символы.ПС + СтрокаКонкурент;
	КонецЕсли;

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Заголовок",""+ТекущаяНоменклатура + Символы.ПС + СтрокаКонкурент); 
	СтруктураПараметров.Вставить("АдресКартинки", СсылкаНаФото);
	СтруктураПараметров.Вставить("ЭтоСсылка", Истина);
	СтруктураПараметров.Вставить("ЗаголовокФормы", "Просмотр фото");
	ОткрытьФорму("ОбщаяФорма.ФормаПросмотраКартинок",Новый Структура("СтрутураПараметров",СтруктураПараметров));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеНоменклатуры(ТекНоменклатура)
	Возврат ТекНоменклатура.Описание;
КонецФункции

&НаКлиенте
Процедура Флажок(Команда)
	ТекСтрока = Элементы.ДеревоСопоставления.ТекущиеДанные;
	Если ТекСтрока.Уровень =  1 Тогда 
		Возврат;
	КонецЕсли;
	Если ТекСтрока.СопоставлениеКорректно = 0 Тогда 
		ТекСтрока.СопоставлениеКорректно = 2;
	ИначеЕсли ТекСтрока.СопоставлениеКорректно = 1 Тогда 
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ВводКомментария", ЭтаФорма, Новый Структура),ТекСтрока.КатегорияКомментарий, "Введите комментарий:",тип("СправочникСсылка.ШаблоныКомментариев"));//Ден  2017 11 30 ---
	ИначеЕсли ТекСтрока.СопоставлениеКорректно = 2 Тогда 
		ТекСтрока.СопоставлениеКорректно = 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВводКомментария(Результат = Неопределено, ДопПараметры = Неопределено) Экспорт 
	Если НЕ Результат = Неопределено Тогда 
		ТекСтрока = Элементы.ДеревоСопоставления.ТекущиеДанные;
		Если НЕ ТекСтрока = Неопределено Тогда 
			ТекСтрока.КатегорияКомментарий = Результат;
			ТолькоКомментарий = Ложь;
			Если ДопПараметры.Свойство("ТолькоКомментарий", ТолькоКомментарий) И ТолькоКомментарий Тогда 
				Возврат;
			КонецЕсли;
			ТекСтрока.СопоставлениеКорректно = 0;
			СтрокиВыведенных = ТекСтрока.ПолучитьРодителя().ПолучитьЭлементы();
			//Соберем массив уже выведенных конкурентов и магазинов
			ТекМагазин = ТекСтрока.КодИсполнитель;
			МассивКонкурентовНеВыводить = Новый Массив;
			МассивМагазиновНеВыводить = Новый Массив;
			Для Каждого СтрокДЗ Из СтрокиВыведенных Цикл 
				Если НЕ СтрокДЗ.СопоставлениеКорректно = 0 Тогда 
					МассивМагазиновНеВыводить.Добавить(СтрокДЗ.КодИсполнитель);
				КонецЕсли;
				МассивКонкурентовНеВыводить.Добавить(СтрокДЗ.НоменклатураКонкурент);
			КонецЦикла;
//			МассивСтуктурНоваяСтрока = ДобавитьСтрокуВТЧ(МассивМагазиновНеВыводить, МассивКонкурентовНеВыводить, ТекМагазин);
//			Для Каждого СтуктураНоваяСтрока Из МассивСтуктурНоваяСтрока Цикл 
//				НоваяСтрока = СтрокиВыведенных.Добавить();
//				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтуктураНоваяСтрока);
//			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ВводКомментария()

&НаСервере
Процедура ЗаполнитьТЧНаСервере()
	СКД = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	Объект.Сопоставление.Очистить();
	//Запускаем компоновку
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	НастройкиОтбора = Отбор.ПолучитьНастройки();
	ЭлементыОтбора = НастройкиОтбора.Отбор.Элементы;
	//Получим и добавим отбор пользователя
	ТекущийПользователь = ОбщегоНазначения.ТекущийПользователь();
	ОтборПользователя = ТекущийПользователь.ОтборХранилище.Получить();
	Если НЕ ОтборПользователя = Неопределено Тогда 
		ЭлементыОтбораПользователя = ОтборПользователя.Отбор.Элементы;
		Для Каждого ЭлементОтбораПользователя Из ЭлементыОтбораПользователя Цикл 
			элементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(элементОтбора, ЭлементОтбораПользователя);
		КонецЦикла;
	КонецЕсли;

	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, НастройкиОтбора,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//Создаем процессор компоновки
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	//Выводим в таблицу значений
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТЗ = ПроцессорВывода.Вывести(ПроцессорКомпоновки, истина);
	
	ТекМагазин = Неопределено;
	ТекНом = Неопределено;
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Если ТекНом <> СтрокаТЗ.Номенклатура Тогда 
			ТекМагазин = СтрокаТЗ.Исполнитель;
			ТекНом = СтрокаТЗ.Номенклатура;
			МассивКонкурентов = Новый Массив;//по каждой номенклатуре ищем только конкурента в одном варианте, если конкурент на несколько магазинов, то оставляем один раз	
		ИначеЕсли ТекМагазин <> СтрокаТЗ.Исполнитель Тогда 
			ТекМагазин = СтрокаТЗ.Исполнитель;
		Иначе 
			//этот магазин уже есть
			Продолжить;
		КонецЕсли;
		Если НЕ МассивКонкурентов.Найти(СтрокаТЗ.Конкурент) = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		МассивКонкурентов.Добавить(СтрокаТЗ.Конкурент);
		СтрокаТЧ = Объект.Сопоставление.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТЗ);
	КонецЦикла;
	Объект.Сопоставление.Сортировать("Номенклатура Возр");

	ПолучитьТЗЦЕН(Объект.Сопоставление.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	ТЧ_В_ДеревоНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧ(Команда)
	//Ден  2017 11 30 ---
	Если объект.Сопоставление.Количество() Тогда
		ТекстВопроса = "При перезаполнении все текущие данные будут потеряны, продолжить?";
		ПоказатьВопрос(новый ОписаниеОповещения("ПослеВопросаОЗаполнении", ЭтотОбъект),ТекстВопроса,РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ПослеВопросаОЗаполнении();	
	КонецЕсли;
	//---
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОЗаполнении(Результат = Истина,Параметры = Неопределено) Экспорт//Ден  2017 11 30 ---
	Если Результат = КодВозвратаДиалога.ОК или Результат = Истина Тогда
		Объект.Сопоставление.Очистить();
		ДеревоСопоставления.ПолучитьЭлементы().Очистить();
		ЗаполнитьТЧНаСервере();
		РазвернутьДерево();	
	КонецЕсли;
КонецПроцедуры//

&НаКлиенте
Процедура РазвернутьДерево()
	КоллекцияЭлементовДерева = ДеревоСопоставления.ПолучитьЭлементы();
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл    
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		Элементы.ДеревоСопоставления.Развернуть(ИдентификаторСтроки);
	КонецЦикла;
КонецПроцедуры // ()

&НаСервере
Процедура ВсеСопоставитьНаСервере(РезультатСопоставления)//Ден  2017 12 04 ---
	Для Каждого Стр Из Объект.Сопоставление Цикл
		Стр.СопоставлениеКорректно = РезультатСопоставления;
	КонецЦикла;	
	ТЧ_В_ДеревоНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВсеСопоставить(Команда)
	ВсеСопоставитьНаСервере(1);//Ден  2017 12 04 ---
	РазвернутьДерево();
КонецПроцедуры

&НаКлиенте
Процедура ВсеСнять(Команда)
	ВсеСопоставитьНаСервере(0);//Ден  2017 12 04 ---
	РазвернутьДерево();
КонецПроцедуры

